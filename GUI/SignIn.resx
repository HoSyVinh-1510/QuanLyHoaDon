<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>